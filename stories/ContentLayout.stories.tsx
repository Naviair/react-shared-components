/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable import/no-default-export */
import React, { ComponentProps } from 'react';
import { Story, Meta } from '@storybook/react';
import { Card, ContentLayout, ICardProps } from '../src/Components';
import { Title, Description, Primary, ArgsTable, PRIMARY_STORY, Stories } from '@storybook/addon-docs';
import { library } from '@fortawesome/fontawesome-svg-core';
import { faDownload } from '@fortawesome/pro-light-svg-icons/faDownload';
import { faGlobe } from '@fortawesome/pro-light-svg-icons/faGlobe';
import { faBadgeCheck } from '@fortawesome/pro-light-svg-icons/faBadgeCheck';

library.add(faDownload, faGlobe, faBadgeCheck);

//👇 This default export determines where your story goes in the story list
export default {
	title: 'Components/Layout/ContentLayout',
	component: ContentLayout,
	parameters: {
		layout: 'centered',
		docs: {
			page: () => (
				<>
					<Title />
					<Description>{'Naviair ContentLayout component'}</Description>
					<Primary />
					<ArgsTable story={PRIMARY_STORY} />
					<Stories />
				</>
			),
		},
	},
} as Meta<ComponentProps<typeof ContentLayout>>;

//👇 We create a “template” of how args map to rendering
const Template: Story<ComponentProps<typeof ContentLayout>> = (args) => {
	return <ContentLayout {...args} />;
};

export const SinglePage = Template.bind({});
SinglePage.args = {
	multipage: false,
	title: 'ContentLayout page title',
	children: (
		<div style={{ height: '75vh', width: '75vw' }}>
			<p style={{ textAlign: 'center' }}>
				{'This is a Card inside the ContentLayout generated by ContentLayout.'}
				<br />
				{'ContentLayout has it owns padding and the Card component has another.'}
			</p>
		</div>
	),
};

const multipageChildren = [
	{ icon: 'download', title: 'Small card 1', type: 'small', textAlign: 'center', fill: true } as ICardProps,
	{ icon: 'globe', title: 'Regular card 1', type: 'regular', textAlign: 'left', fill: false } as ICardProps,
	{ icon: 'badge-check', title: 'Small card 2', type: 'small', textAlign: 'right', fill: true } as ICardProps,
].map((element, idx) => {
	return (
		<Card key={`card_${idx}`} fill icon={element.icon} title={element.icon} type={element.type} textAlign={element.textAlign}>
			<p>
				{
					'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis ex vitae consequatur placeat, praesentium laboriosam nemo rem repellat ipsum quasi, eum et cupiditate consequuntur sit pariatur reiciendis soluta delectus est.'
				}
			</p>
			<br />
			<pre>{JSON.stringify(element, null, 2)}</pre>
		</Card>
	);
});
export const MultiPage = Template.bind({});
MultiPage.args = {
	multipage: true,
	title: 'ContentLayout page title (multipage enabled)',
	children: multipageChildren,
};
